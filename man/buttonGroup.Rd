% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/button-group.R
\name{buttonGroup}
\alias{buttonGroup}
\alias{buttonGroupDemo}
\alias{updateButtonGroupValue}
\title{A Bootstrap Button Group Input}
\usage{
buttonGroup(
  inputId,
  choices,
  choice_labels = names(choices) \%||\% choices,
  btn_class = "btn-default",
  btn_icon = NULL,
  btn_extra = NULL,
  selected = NULL,
  multiple = FALSE,
  ...
)

buttonGroupDemo(display.mode = c("showcase", "normal", "auto"))

updateButtonGroupValue(
  inputId,
  values = NULL,
  session = shiny::getDefaultReactiveDomain()
)
}
\arguments{
\item{inputId}{The input id}

\item{choices}{A vector of choices for the button group. The names will be
used for button labels and the value are returned by the input. If an
unnamed vector is provided, the button labels and values returned will be
the same.}

\item{choice_labels}{A list of labels for the choices that can be arbitrary
HTML if wrapped in `HTML()`. Set to `""` or `NULL` for no label.}

\item{btn_class}{A single class applied to each individual button, or a
vector of button classes for each button (must be same length as
`choices`). For more information see
<https://getbootstrap.com/docs/3.3/css/#buttons>. The default button class
is, appropriately, `"btn-default"`. Be sure to include this or a similar
button style class if you modify `btn_class`.}

\item{btn_icon}{An single icon name or a vector of icon names (must be the
same length as `choices`) to be applied to the buttons. See [shiny::icon()]
for more information.}

\item{btn_extra}{A list or list of lists of additional attributes to be added
  to the buttons. If the list does not contain sublists (i.e. depth 1), then
  the same attributes are applied to all of the buttons. Otherwise, the
  list of attributes should match the buttons generated from `choices`.

  For example

  ```
  buttonGroup(
    inputId = "special_group", choices = c("one", "two"),
    btn_extra = list(
      list(alt = "Button One"),
      list(alt = "Button Two")
    )
  )
  ```}

\item{selected}{The buttons, by button value, that should be activated.}

\item{multiple}{By default, only a single button may be toggled at a time.
If `multiple` is `TRUE`, then `buttonGroup()` returns a character vector
of the selected button values.}

\item{...}{Passed to [htmltools::div()]}

\item{display.mode}{The mode in which to display the application. If set to
the value \code{"showcase"}, shows application code and metadata from a
\code{DESCRIPTION} file in the application directory alongside the
application. If set to \code{"normal"}, displays the application normally.
Defaults to \code{"auto"}, which displays the application in the mode given
in its \code{DESCRIPTION} file, if any.}

\item{values}{The `choices` (not `choice labels`) that should be activated.
Set to `NULL` to deactivate all buttons.}

\item{session}{The `session` object passed to function given to `shinyServer`.}
}
\value{
The value returned by the input to the Shiny server is either `NULL`
  when no buttons are selected or a character vector containing the values
  from `choices` corresponding to the active buttons.
}
\description{
This input operates like a [shiny::radioButtons()] or
[shiny::checkboxGroupInput()] input.
}
\section{Functions}{
\itemize{
\item \code{buttonGroupDemo}: Example app demonstrating usage of the buttonGroup
input.

\item \code{updateButtonGroupValue}: Set active buttons to the choices in `values`, which
must match the values in `choices` provided to `buttonGroup()`.
}}

